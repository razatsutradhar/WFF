
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND DIV EQUAL EXISTS FALSE FORALL GOEQ GREAT LESS LOEQ LPAR MINUS MULT NEQUAL NOT NUMBER OR PLUS RPAR STRING TRUE VARIABLEwffstart : startstart : wffstart : liststart : boolwff : NUMBERwff : LPAR PLUS wff wff RPARwff : LPAR MINUS wff wff RPARwff : LPAR MULT wff wff RPARwff : LPAR DIV wff wff RPARwff : STRINGwff : VARIABLEbool : LPAR LESS wff wff RPARbool : LPAR OR bool bool RPARbool : LPAR AND bool bool RPARbool : LPAR GREAT wff wff RPARbool : LPAR GOEQ wff wff RPARbool : LPAR LOEQ wff wff RPARbool : LPAR NEQUAL wff wff RPARbool : LPAR NOT bool RPARbool : TRUEbool : FALSElist : LPAR array RPARarray :array : array wff'
    
_lr_action_items = {'NUMBER':([0,6,7,8,9,12,13,14,15,16,17,20,21,22,23,26,27,28,29,31,32,36,37,38,39,53,54,55,56,],[6,-5,-23,-10,-11,6,6,6,6,6,6,6,6,6,6,6,6,6,6,-24,6,6,6,6,6,-6,-7,-8,-9,]),'LPAR':([0,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,28,29,31,32,34,35,36,37,38,39,52,53,54,55,56,57,58,59,60,61,62,63,],[7,-5,-23,-10,-11,-20,-21,25,25,25,25,25,25,33,33,25,25,25,25,33,25,25,25,25,-24,25,33,33,25,25,25,25,-19,-6,-7,-8,-9,-12,-13,-14,-15,-16,-17,-18,]),'STRING':([0,6,7,8,9,12,13,14,15,16,17,20,21,22,23,26,27,28,29,31,32,36,37,38,39,53,54,55,56,],[8,-5,-23,-10,-11,8,8,8,8,8,8,8,8,8,8,8,8,8,8,-24,8,8,8,8,8,-6,-7,-8,-9,]),'VARIABLE':([0,6,7,8,9,12,13,14,15,16,17,20,21,22,23,26,27,28,29,31,32,36,37,38,39,53,54,55,56,],[9,-5,-23,-10,-11,9,9,9,9,9,9,9,9,9,9,9,9,9,9,-24,9,9,9,9,9,-6,-7,-8,-9,]),'TRUE':([0,10,11,18,19,24,34,35,52,57,58,59,60,61,62,63,],[10,-20,-21,10,10,10,10,10,-19,-12,-13,-14,-15,-16,-17,-18,]),'FALSE':([0,10,11,18,19,24,34,35,52,57,58,59,60,61,62,63,],[11,-20,-21,11,11,11,11,11,-19,-12,-13,-14,-15,-16,-17,-18,]),'$end':([1,2,3,4,5,6,8,9,10,11,30,52,53,54,55,56,57,58,59,60,61,62,63,],[0,-1,-2,-3,-4,-5,-10,-11,-20,-21,-22,-19,-6,-7,-8,-9,-12,-13,-14,-15,-16,-17,-18,]),'RPAR':([6,7,8,9,10,11,16,31,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,],[-5,-23,-10,-11,-20,-21,30,-24,52,53,54,55,56,57,58,59,60,61,62,63,-19,-6,-7,-8,-9,-12,-13,-14,-15,-16,-17,-18,]),'PLUS':([7,25,],[12,12,]),'MINUS':([7,25,],[13,13,]),'MULT':([7,25,],[14,14,]),'DIV':([7,25,],[15,15,]),'LESS':([7,33,],[17,17,]),'OR':([7,33,],[18,18,]),'AND':([7,33,],[19,19,]),'GREAT':([7,33,],[20,20,]),'GOEQ':([7,33,],[21,21,]),'LOEQ':([7,33,],[22,22,]),'NEQUAL':([7,33,],[23,23,]),'NOT':([7,33,],[24,24,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'wffstart':([0,],[1,]),'start':([0,],[2,]),'wff':([0,12,13,14,15,16,17,20,21,22,23,26,27,28,29,32,36,37,38,39,],[3,26,27,28,29,31,32,36,37,38,39,41,42,43,44,45,48,49,50,51,]),'list':([0,],[4,]),'bool':([0,18,19,24,34,35,],[5,34,35,40,46,47,]),'array':([7,],[16,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> wffstart","S'",1,None,None,None),
  ('wffstart -> start','wffstart',1,'p_wffstart','WFFParser.py',7),
  ('start -> wff','start',1,'p_start_1','WFFParser.py',12),
  ('start -> list','start',1,'p_start_2','WFFParser.py',17),
  ('start -> bool','start',1,'p_start_3','WFFParser.py',22),
  ('wff -> NUMBER','wff',1,'p_wff_1','WFFParser.py',28),
  ('wff -> LPAR PLUS wff wff RPAR','wff',5,'p_wff_2','WFFParser.py',33),
  ('wff -> LPAR MINUS wff wff RPAR','wff',5,'p_wff_3','WFFParser.py',38),
  ('wff -> LPAR MULT wff wff RPAR','wff',5,'p_wff_4','WFFParser.py',43),
  ('wff -> LPAR DIV wff wff RPAR','wff',5,'p_wff_5','WFFParser.py',48),
  ('wff -> STRING','wff',1,'p_wff_6','WFFParser.py',53),
  ('wff -> VARIABLE','wff',1,'p_wff_7','WFFParser.py',58),
  ('bool -> LPAR LESS wff wff RPAR','bool',5,'p_bool_1','WFFParser.py',63),
  ('bool -> LPAR OR bool bool RPAR','bool',5,'p_bool_2','WFFParser.py',68),
  ('bool -> LPAR AND bool bool RPAR','bool',5,'p_bool_3','WFFParser.py',73),
  ('bool -> LPAR GREAT wff wff RPAR','bool',5,'p_bool_4','WFFParser.py',78),
  ('bool -> LPAR GOEQ wff wff RPAR','bool',5,'p_bool_5','WFFParser.py',83),
  ('bool -> LPAR LOEQ wff wff RPAR','bool',5,'p_bool_6','WFFParser.py',88),
  ('bool -> LPAR NEQUAL wff wff RPAR','bool',5,'p_bool_7','WFFParser.py',92),
  ('bool -> LPAR NOT bool RPAR','bool',4,'p_bool_8','WFFParser.py',96),
  ('bool -> TRUE','bool',1,'p_bool_9','WFFParser.py',101),
  ('bool -> FALSE','bool',1,'p_bool_10','WFFParser.py',106),
  ('list -> LPAR array RPAR','list',3,'p_list_1','WFFParser.py',111),
  ('array -> <empty>','array',0,'p_array_1','WFFParser.py',117),
  ('array -> array wff','array',2,'p_array_2','WFFParser.py',121),
]
